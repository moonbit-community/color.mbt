// Generated using `moon info`, DON'T EDIT IT
package "illusory0x0/color"

// Values
fn hsl_to_rgb(Double, Double, Double) -> (Double, Double, Double)

fn rgb_to_hsl(Double, Double, Double) -> (Double, Double, Double)

// Errors

// Types and methods
type Color
fn Color::alpha(Self) -> Byte
fn Color::blue(Self) -> Byte
fn Color::green(Self) -> Byte
fn Color::hsl(UInt, UInt, UInt) -> Self
fn Color::hsla(UInt, UInt, UInt, UInt) -> Self
fn Color::new(UInt) -> Self
fn Color::red(Self) -> Byte
fn Color::rgb(Byte, Byte, Byte) -> Self
fn Color::rgba(Byte, Byte, Byte, Byte) -> Self
fn Color::to_hsl(Self) -> HSL
impl Compare for Color
impl Default for Color
impl Eq for Color
impl Hash for Color
impl Show for Color

pub struct HSL {
  hue : UInt
  saturation : UInt
  lightness : UInt
}
fn HSL::new(UInt, UInt, UInt) -> Self
fn HSL::to_color(Self) -> Color
fn HSL::to_hsla(Self) -> HSLA
impl Compare for HSL
impl Default for HSL
impl Eq for HSL
impl Hash for HSL
impl Show for HSL

pub struct HSLA {
  hue : UInt
  saturation : UInt
  lightness : UInt
  alpha : UInt
}
fn HSLA::new(UInt, UInt, UInt, UInt) -> Self
fn HSLA::to_color(Self) -> Color
fn HSLA::to_hsl(Self) -> HSL
impl Compare for HSLA
impl Default for HSLA
impl Eq for HSLA
impl Hash for HSLA
impl Show for HSLA

// Type aliases

// Traits

